name: Deploy
on:
  registry_package:
    types: [ published ] # event payload: https://docs.github.com/en/developers/webhooks-and-events/webhook-events-and-payloads#package

env:
  DOCKER_IMAGE: docker.pkg.github.com/${{ github.repository }}/${{ github.event.registry_package.name }}:${{ github.event.registry_package.package_version.version }}
jobs:
  dev-fss:
    name: dev-fss
    if: github.event.registry_package.package_type == 'docker'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch sources
        uses: actions/checkout@v2

      - name: Check dev-fss existence
        id: dev_fss
        uses: andstor/file-existence-action@v1
        with:
          files: "config/${{ github.event.registry_package.name }}/dev-fss.yml"
      - name: deploy
        if: steps.dev_fss.outputs.files_exists == 'true'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: config/nais.yml
          VARS: config/${{ github.event.registry_package.name }}/dev-fss.yml
          IMAGE: ${{ env.DOCKER_IMAGE }}

  prod-fss:
    name: prod-fss
    runs-on: ubuntu-latest
    steps:
      - name: Fetch sources
        uses: actions/checkout@v2
      - name: Check prod-fss existence
        id: dev_fss
        uses: andstor/file-existence-action@v1
        with:
          files: "config/${{ github.event.registry_package.name }}/prod-fss.yml"
      - name: deploy
        if: steps.dev_fss.outputs.files_exists == 'true'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: config/nais.yml
          VARS: config/${{ github.event.registry_package.name }}/prod-fss.yml
          IMAGE: ${{ env.DOCKER_IMAGE }}
